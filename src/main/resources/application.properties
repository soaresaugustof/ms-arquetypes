spring.application.name=arquetipos
server.port=${PORT:8081}

# Ativa o endpoint de health do Actuator
management.endpoints.web.exposure.include=health
management.health.show-details=never

# Configurações da Hotmart
hotmart.api-url=https://developers.hotmart.com
hotmart.auth-url=https://api-sec-vlc.hotmart.com
hotmart.subdomain=jornada-dos-arquetipos

# Credenciais (melhor prática é usar Vault, AWS Secrets Manager, ou variáveis de ambiente)
hotmart.client-id=d90eb745-8747-4a03-8b10-39cc960c07dc
hotmart.client-secret=4735326c-b5d5-4832-b1b7-3efd0cd9f049
hotmart.basic-auth=Basic ZDkwZWI3NDUtODc0Ny00YTAzLThiMTAtMzljYzk2MGMwN2RjOjQ3MzUzMjZjLWI1ZDUtNDgzMi1iMWI3LTNlZmQwY2Q5ZjA0OQ==

# Configurações do banco de dados PostgreSQL
# Usa variáveis de ambiente providas pelo ambiente de deploy (ex.: RAILWAY)
# JDBC_DATABASE_URL: usado por alguns provedores se já fornecerem a URL no formato jdbc:postgresql://
# (não definimos spring.datasource.url aqui para não confundir autoconfiguração do Spring Boot)
# Também aceitamos DATABASE_URL (heroku/railway) no formato postgres://user:pass@host:port/db ? DataSourceConfig converte automaticamente
spring.datasource.username=${PGUSER:postgres}
spring.datasource.password=${PGPASSWORD:postgres}

# Segurança: não permita que Hibernate gere/atualize esquema automaticamente em produção.
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Flyway: migrações seguras. baselineOnMigrate ajuda quando o banco já tem dados.
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# Ajuste para testes locais rápidos com H2 (override em profile de teste se necessário)
# Exemplo: use -Dspring.profiles.active=test para alternar.
